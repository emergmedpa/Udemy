{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf100
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Light;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red31\green36\blue45;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c16078\c18824\c23137;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl920\partightenfactor0

\f0\fs72 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Introduction to Object Oriented Programming - Text directions, refs and code\cb1 \
\pard\pardeftab720\sl580\partightenfactor0

\fs48 \cf2 \cb3 Section 2, Lecture 37\cb1 \
\pard\pardeftab720\sl440\sa400\partightenfactor0

\f1\fs36 \cf2 \cb3 Object-oriented programming (OOP) is a programming paradigm that uses objects and their interactions to design and program applications\cb1 \
\cb3 - Allows the program to block off areas of code that perform certain tasks independently of other areas in the application.\cb1 \
\cb3 Encapsulation - concept of blocking off areas of code and not making it available to the rest of the program\cb1 \
\cb3 Abstraction - is simplifying a complex process of a program, an enterprise software solution for example by modeling classes appropriate for it\cb1 \
\cb3 Inheritance - is used where a class inherits the behavior of another class, referred to as the superclass\cb1 \
\cb3 Polymorphism - is when a class inherits the behaviors of another class, but has the ability to not inherit everything and change some of it\'92s inherited behaviors. For example to write a method that does something differently from the inherited method\cb1 \
\cb3 Classes - It is a blueprint that describes the state and behavior that the objects of the class all share. A class can be used to create many objects. Objects created at runtime from a class are called instances of that particular class.\cb1 \
\cb3 Example of a user class\cb1 \
\cb3 class User\cb1 \
\cb3 attr_accessor :name, :email\cb1 \
\cb3 def initialize(name, email)\cb1 \
\cb3 @name = name\cb1 \
\cb3 @email = email\cb1 \
\cb3 end\cb1 \
\cb3 def run\cb1 \
\cb3 puts "Hey I'm running"\cb1 \
\cb3 end\cb1 \
\cb3 def self.identify_yourself\cb1 \
\cb3 puts "Hey I am a class method"\cb1 \
\cb3 end\cb1 \
\cb3 end\cb1 \
\cb3 user = User.new("mashrur", "mashrur@example.com")\cb1 \
\cb3 user.run\cb1 \
\cb3 User.identify_youself # to run this class method you don't need an instance of user you can directly call the\cb1 \
\cb3 # class User\cb1 \
\pard\pardeftab720\sl320\partightenfactor0

\fs28 \cf2 \
}